week 6
Folder Name : lines
File Name : lines.py 
Solution 
import sys

def main():
    check_command_line_arg()
    # Try to open the file
    try:
        with open(sys.argv[1], "r") as file:
            lines = file.readlines()
        file.close()
    # If can't open this means that the file does not exist
    except FileNotFoundError:
        sys.exit("File does not exist")
    # Loop through the lines and check if starts with # or whitespace
    count_lines = 0
    for line in lines:
        if check_comment_or_empty_line(line) == True:
            count_lines += 1
    print(count_lines)

def check_command_line_arg():
    #Check how many elements in the command line
    if len(sys.argv) < 2:
        sys.exit("Too few command-line arguments")
    if len(sys.argv) > 2:
        sys.exit("Too many command-line arguments")
    # Check if it is a Python file
    if ".py" not in sys.argv[1]:
        sys.exit("Not a Python file")

def check_comment_or_empty_line(line):
    if line.lstrip().startswith('#'):
        return False
    if line.isspace():
        return False
    return True

if __name__ == "__main__":
    main()

Foler Name : pizza
File Name : pizza.py 
Solution :
import sys
import csv
from tabulate import tabulate

def main():
    check_command_line_arg()
    # Create variable to store the table data
    table = []
    # Try to open the file
    try:
        with open(sys.argv[1]) as csvfile:
            reader = csv.reader(csvfile)
            for row in reader:
                table.append(row)
    # If can't open this means that the file does not exist
    except FileNotFoundError:
        sys.exit("File does not exist")
    print(tabulate(table[1:], table[0], tablefmt="grid"))

def check_command_line_arg():
    #Check how many elements in the command line
    if len(sys.argv) < 2:
        sys.exit("Too few command-line arguments")
    if len(sys.argv) > 2:
        sys.exit("Too many command-line arguments")
    # Check if it is a CSV file
    if ".csv" not in sys.argv[1]:
        sys.exit("Not a CSV file")

if __name__ == "__main__":
    main()

Folder Name :scourgify
File name :scourgify.py 
Solution :
import sys
import csv

def main():
    check_command_line_arg()
    output = []
    # Try to open the file
    try:
        with open(sys.argv[1]) as csvfile:
            reader = csv.DictReader(csvfile)
            for row in reader:
                # Create name, last name
                split_name = row['name'].split(",")
                # Add them to dict
                output.append({"first": split_name[1].lstrip(), "last": split_name[0], "house": row['house']})
    # If can't open this means that the file does not exist
    except FileNotFoundError:
        sys.exit(f"Could not read {sys.argv[1]}")

    # Write new csv file
    with open(sys.argv[2], "w") as file:
        writer = csv.DictWriter(file, fieldnames=["first", "last", "house"])
        writer.writerow({"first": "first", "last": "last", "house": "house"})
        for row in output:
            writer.writerow({"first": row['first'], "last": row['last'], "house": row['house']})

def check_command_line_arg():
    #Check how many elements in the command line
    if len(sys.argv) < 3:
        sys.exit("Too few command-line arguments")
    if len(sys.argv) > 3:
        sys.exit("Too many command-line arguments")
    # Check if it is a CSV file
    if ".csv" not in sys.argv[1] or ".csv" not in sys.argv[2]:
        sys.exit("Not a CSV file")


if __name__ == "__main__":
    main()

Folder Name : shirt 
file name : shirt.py
import sys
from os.path import splitext
from PIL import Image, ImageOps

def main():
    check_command_line_arg()
    # Open the image
    try:
        muppet = Image.open(sys.argv[1])
    except FileNotFoundError:
        sys.exit("Input does not exist")
    # Open shirt
    shirt = Image.open("shirt.png")
    # Get the size of the shirt
    size = shirt.size
    # Resize muppet image to fit shirt
    muppet = ImageOps.fit(muppet, size)
    # Paste shirt in muppet
    muppet.paste(shirt, shirt)
    # Create output image
    muppet.save(sys.argv[2])


def check_command_line_arg():
    #Check how many elements in the command line
    if len(sys.argv) < 3:
        sys.exit("Too few command-line arguments")
    if len(sys.argv) > 3:
        sys.exit("Too many command-line arguments")
    file1 = splitext(sys.argv[1])
    file2 = splitext(sys.argv[2])
    # Check if it is a Image file
    if check_extension(file1[1].lower()) == False or check_extension(file2[1].lower()) == False:
        sys.exit("Not a Image file")
    # Check if extension of both files are the same
    if file1[1].lower() != file2[1].lower():
        sys.exit("Input and output have different extensions")

def check_extension(file):
    if file in [".jpg", ".jpeg",".png"]:
        return True
    return False

if __name__ == "__main__":
    main()